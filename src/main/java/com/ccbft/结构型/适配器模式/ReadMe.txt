一、适配器模式定义

    适配器模式又叫变压器模式，它的功能是将一个类的接口变成客户端所期望的另一种接口。

二、适配器模式使用场景

在生活中，适配器模式有非常多的应用场景，例如我们使用的显示器转接头，电源插转接头等。

适配器模式提供一个适配器，将当前系统存在的一个对象转化为客户端能够访问的接口对象，适用于以下业务场景：

    1.已经存在的类，它的方法和需求不匹配(方法结果相同或相似)的情况
    2.适配器模式不是软件设计阶段考虑的设计模式，是随着软件维护，由于不同产品、不同厂家造成功能类似而接口不相同的情况下的解决方案，有种亡羊补牢的感觉

三、适配器模式代码实现

适配器有3种形式：类适配器、对象适配器、接口适配器。

适配器一般有三个角色：目标角色(Target)、源角色(Source)、适配器(Adpater)。
案例演示(针对方法参数，也可延伸到内部逻辑计算等处理)步骤：
创建 源角色-->目标角色-->适配器-->客户端

作者：yonjar
链接：https://www.jianshu.com/p/f681079716ba
来源：简书
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。

例子1：新闻联播主持人，手语翻译，聋哑人

适配器模式和装饰器模式的区别：
适配器模式和装饰器模式都是面向对象设计模式，它们的相同点和不同点如下：

相同点：

    都是结构性模式（Structural Pattern）；
    都使用了对象组合（Object Composition）方式，将多个对象组合成一个新的对象；
    都可以用于动态改变对象的行为。

不同点：

    适配器模式主要用于解决接口不兼容的问题，它通过将一个类的接口转换成客户希望的【另外一个接口】，从而使得原本由于接口不兼容而不能一起工作的那些类可以在一起工作；
    装饰器模式主要用于动态添加功能，在不改变原有对象结构的情况下，为对象增加新的行为或责任；
    在适配器模式中，适配器是实现【新的接口】并将其转换成原有接口的对象；而在装饰器模式中，装饰器是继承自原有对象的对象，并且具有与原有对象【相同的接口】；
    适配器模式通常只涉及【单个对象】，并且是静态的，即适配器在创建时就确定了；而装饰器模式通常涉及【大量的对象】，并且是动态的，即装饰器可以在运行时动态地添加、删除和修改对象的行为；
    适配器模式主要分为类适配器和对象适配器两种，而装饰器模式没有这样的区别。

